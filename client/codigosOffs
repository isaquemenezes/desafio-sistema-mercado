        <div v-else>         
           <!-- start loop  -->
           <div v-for="(vendas, numeroVenda) in Venda()" :key="numeroVenda">
                <div 
                class="d-flex text-body-secondary pt-3" 
                v-for="venda in vendas" 
                :key="venda.id"
                >           
                
                    <div class="pb-3 mb-0 small lh-sm border-bottom w-100">
                        <div class="d-flex justify-content-between align-items-center">
                        <strong class="text-gray-dark"><b>Descrição: </b>{{ venda.produto.descricao }}  
                        </strong>

                        <div> 
                            <button type="button" class="btn btn-primary me-2">Editar</button>
                            <button type="button" class="btn btn-danger">Excluir</button>
                        </div>
                        
                        </div>
                        <div class="d-flex justify-content-start">

                        <div class="d-block">
                            <b>Valor: </b> {{ venda.produto.preco }}
                        </div>

                        <div class="d-block ms-3">
                            <b>Imposto: </b> {{ venda.produto.percentual }}
                        </div>

                        <div class="d-block ms-3">
                            <b>Quantidade: </b> {{ venda.quantidade_produto }}
                        </div>


                        <div class="d-block ms-3">
                            <b>Total: </b> {{ calcularTotal(venda) }}
                        </div>

                        <div class="d-block ms-3">
                            <b>Total de Imposto: </b>  {{ calcularImposto(venda)  }}
                        </div>

                        
                        </div>              
                    </div>           
                </div> 
            </div>

             <!-- end loop -->
        </div>

******************
Vendas:
<template>
    <main class="container">
      
      <div class="mt-3 my-3 p-3 bg-body rounded shadow-sm">     
      </div>    
 
      <div class="mt-5 my-3 p-3 bg-body rounded shadow-sm">
           
 
        <div class="d-flex justify-content-between">
          <h3 class="border-bottom pb-2 mb-0">Todos as vendas </h3>
 
          <div class="d-flex justify-content-between">          
            <router-link class="btn btn-success" to="/cadastroVenda">Cadastrar Venda</router-link>         
          </div>
        </div>    
 
         <div v-if="vendas.length < 0 ">
           <strong class="d-block mt-2"> Sem vendas </strong>
         </div>
 
         <div v-else>         
             <!-- start loop  -->
             <div v-for="(vendas, index) in Vendas()" :key="index">
               
               <h3 class="border-bottom mt-5 pb-2 mb-0 text-start">Venda {{ vendas }} 
                 </h3> 
 
                 <div 
                 class="d-flex text-body-secondary pt-3" 
                 v-for="venda in vendas" 
                 :key="venda.id"
                 >           
                 
                     <div class="pb-3 mb-0 small lh-sm border-bottom w-100">
                         <div class="d-flex justify-content-between align-items-center">
                         <strong class="text-gray-dark"><b>Descrição: </b>{{ venda.produto.descricao }}  
                         </strong>
 
                         <div> 
                             <button type="button" class="btn btn-primary me-2">Editar</button>
                             <button type="button" class="btn btn-danger">Excluir</button>
                         </div>
                         
                         </div>
                         <div class="d-flex justify-content-start">
 
                         <div class="d-block">
                             <b>Valor: </b> {{ venda.produto.preco }}
                         </div>
 
                         <div class="d-block ms-3">
                             <b>Imposto: </b> {{ venda.produto.percentual }}
                         </div>
 
                         <div class="d-block ms-3">
                             <b>Quantidade: </b> {{ venda.quantidade_produto }}
                         </div>
 
 
                         <div class="d-block ms-3">
                             <b>Total R$: </b> {{ venda.total }}
                             
                         </div>
 
                         <div class="d-block ms-3">
                             <b>Total de Imposto R$: </b>  {{ venda.imposto }}
                         </div>
 
                         
                         </div>              
                     </div>           
                 </div> 
             </div>
 
              <!-- end loop -->
         </div>
 
        
 
 
          
      </div>
    </main>
 
 </template>
 
 <script>
 export default {
 
   data() {
     return {
       vendas: []
     };
   },
 
   methods: {
 
   //   Vendas() {
   //   const vendasAgrupadas = [];
 
   //   this.vendas.forEach(venda => {
   //     const numeroVenda = venda.numero_venda;
   //     let encontrado = false;
 
   //     vendasAgrupadas.forEach(grupo => {
   //       if (grupo.numero_venda === numeroVenda) {
   //         grupo.vendas.push(venda);
   //         encontrado = true;
   //       }
   //     });
 
   //     if (!encontrado && numeroVenda > 0) {
   //       vendasAgrupadas.push({ numero_venda: numeroVenda, vendas: [venda] });
   //     }
   //   });
 
   //   return vendasAgrupadas;
   // },
 
     Vendas() {
       const vendasAgrupadas = {};
 
       this.vendas.forEach(venda => {
         const numeroVenda = venda.numero_venda;
         
         if (numeroVenda > 0) { // Excluindo vendas com número de venda igual a 0
           if (!vendasAgrupadas[numeroVenda]) {
             vendasAgrupadas[numeroVenda] = [];
           }
           
           vendasAgrupadas[numeroVenda].push(venda);
         }
       });
 
       // return Object.values(vendasAgrupadas);
       return vendasAgrupadas;
     },
 
     // Vendas() { funciona com erro
     //   const vendasAgrupadas = {};
 
     //   this.vendas.forEach(venda => {
     //     const numeroVenda = venda.numero_venda;
 
        
         
     //     if (!vendasAgrupadas[numeroVenda]) {
     //       vendasAgrupadas[numeroVenda] = [];
     //     }
         
     //    vendasAgrupadas[numeroVenda].push(venda);
     //   });
 
     //   return Object.values(vendasAgrupadas); 
 
     //   // return vendasAgrupadas;
     //   // return vendasAgrupadas.filter(vendas => vendas.length > 0); //calculo errado
     //   // return Object.values(vendasAgrupadas);
     // },
 
     // Vendas() { funcional
     //   const vendasAgrupadas = {};
 
     //   this.vendas.forEach(venda => {
     //     const numeroVenda = venda.numero_venda;
         
     //     if (!vendasAgrupadas[numeroVenda]) {
     //       vendasAgrupadas[numeroVenda] = [];
     //     }
         
     //     vendasAgrupadas[numeroVenda].push(venda);
     //   });
 
     //   return vendasAgrupadas;
     // },
     
     // calcularTotal(venda) {
     //   return venda.produto.preco * venda.quantidade_produto; 
     // },
 
 
     // calcularTotal(venda) {
     //   return venda.produto.preco * venda.quantidade_produto; 
     // },
 
     
 
     // calcularTotalProdutos() {
     //   let total = 0;
       
     //   this.vendas.forEach(venda => {
     //     total += this.calcularTotal(venda);
     //   });
       
     //   return total;
     // },
 
 
     // calcularTotalProdutosPorGrupo(numeroVenda) {
     //   let total = 0;
 
     //   console.log('numeroVenda',numeroVenda);
       
     //   this.vendas.forEach(venda => {
     //     if (venda.numero_venda === numeroVenda) {
     //       total += this.calcularTotal(venda);
     //       console.log('total if',total);
     //     }
     //   });
 
     //   console.log(total);
       
     //   return total;
     // },
 
 
     // calcularTotalProdutosPorGrupo(numeroVenda) {
     //   console.log('numeroVenda',numeroVenda);
 
     //   return this.vendas.reduce((total, venda) => {
     //     if (venda.numero_venda === numeroVenda) {
     //       return total + this.calcularTotal(venda);
     //     }
 
     //     console.log(total);
 
     //     return total;
     //   }, 0);
     // },
 
     // calcularImposto(venda) {   
     //   return (venda.produto.preco * venda.produto.percentual / 100) * venda.quantidade_produto;    
     // },
 
     // calcularTotalImpostos() {
     //   let total = 0;
 
     //   this.vendas.forEach(venda => {
     //     total += this.calcularImposto(venda);
     //   });
       
     //   return total;
     // }
 
 
   },
 
   mounted() {
 
     fetch(this.$apiRoute.vendas.listar)
       .then(response => response.json())
       .then(data => {
         this.vendas = data.dados;
         // his.vendas = data.dados;
 
         console.log('dados', data);
       })
       .catch(error => {
         console.error('Error :', error);
       });
   }
 };
 </script>